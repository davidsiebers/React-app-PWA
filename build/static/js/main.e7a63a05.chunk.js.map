{"version":3,"sources":["serviceWorker.js","components/Header.jsx","components/Add.jsx","components/Search.jsx","components/AddPopup.jsx","components/Scroll.jsx","components/Card.jsx","components/CardsContainer.jsx","containers/App.jsx","actions.jsx","constants.jsx","reducers.jsx","index.jsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Header","react_default","a","createElement","className","this","props","user","Component","Add","_this","onClick","addPopup","src","alt","PureComponent","Search","onChange","e","doSearch","target","value","type","placeholder","AddPopup","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","updateName","setState","name","updateEmail","email","saveContact","img","_this2","show","style","display","closePopup","Scroll","children","Card","filter","degree","Array","prototype","slice","document","querySelectorAll","forEach","Math","random","CardsContainer","_ref","contacts","contactComponent","map","contact","i","src_components_Card","key","concat","App","showAddPopup","onRequestContacts","_this$props","isPending","searchResult","filterContacts","toLowerCase","includes","src_components_Header","src_components_Add","src_components_Search","src_components_AddPopup","onSaveNewContact","src_components_Scroll","src_components_CardsContainer","connect","searchContacts","requestContacts","inPending","dispatch","event","payload","fetch","r","json","data","newContact","method","body","JSON","stringify","headers","Content-Type","saveNewContact","initialStateSearch","initialStateContacts","rootReducer","combineReducers","arguments","length","undefined","action","assign","newContacts","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","src_containers_App","getElementById","URL","process","href","origin","addEventListener","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e7a63a05.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport './Header.css';\n\nclass Header extends Component {\n    render() {\n        return (\n            <div className='header'>\n                <h1>Contactlist</h1>\n                <p>Hello {this.props.user}, these are your contacts</p>\n            </div>\n        );\n    }\n}\n\nexport default Header;","import React, { PureComponent } from 'react';\nimport './Add.css';\n\nclass Add extends PureComponent {\n    render() {\n        return (\n            <div className='add' onClick={() =>  this.props.addPopup() }>\n                <img src='/images/add.svg' alt='add' />\n            </div>\n        );\n    }\n}\n\nexport default Add;","import React, { PureComponent } from 'react';\nimport './Search.css';\n\nclass Search extends PureComponent {\n    render() {\n        return (\n            <div className='search'>\n                <input onChange={(e) =>  this.props.doSearch(e.target.value) }type='search' placeholder='search contacts' />\n            </div>\n        );\n    }\n}\n\nexport default Search;","import React, { PureComponent } from 'react';\nimport './AddPopup.css';\n\nclass AddPopup extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            email: ''\n        }\n    }\n\n    updateName = (e) => {\n        this.setState({ name: e.target.value });\n    }\n\n    updateEmail = (e) => {\n        this.setState({ email: e.target.value });\n    }\n\n    saveContact = () => {\n        // contacts.contacts.push({img: \"\", name: this.state.name, email: this.state.email, key: contacts.contacts[contacts.contacts.length - 1].key + 1});\n        this.props.saveContact({img: \"\", name: this.state.name, email: this.state.email})\n    }\n\n    render() {\n        let show = 'none';\n        if(this.props.show === true) {\n            show = 'block';\n        }\n        return (\n            <div className='add_popup' style={{display: show}}>\n                <div className='add_popup-overlay' onClick={() =>  this.props.closePopup() }></div>\n                <div className='add_popup-popup'>\n                    <div className='add_popup-close' onClick={() =>  this.props.closePopup() }><img src='/images/add.svg' alt='add' /></div>\n                    <h3>Add a new contact</h3>\n                    <input className='add_name' onChange={ this.updateName } type='text' placeholder='name' />\n                    <input className='add_email' onChange={ this.updateEmail } type='text' placeholder='email' />\n                    <div>Upload image</div>\n                    <div className='add_button' onClick={() =>  { this.props.closePopup(); this.saveContact() } }>Save contact</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AddPopup;","import React from 'react';\nimport './Scroll.css';\n\nconst Scroll = (props) => {\n    return (\n        <div className='scrollableContent'>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Scroll;","import React, { Component } from 'react';\nimport './Card.css';\n\nclass Card extends Component {\n    render() {\n        let img = '/images/dinah.jpg';\n        let style = {filter: this.props.degree};\n        if(this.props.img !== '') {\n            img = this.props.img;\n            style = {filter: 'none'};\n        }\n        return (\n            <div className='card'>\n                <div className='card_top'>\n                    <img alt='someNiceImg' src={img} style={style}/>\n                </div>\n                <div className='card_bottom'>\n                    <h2>{this.props.name}</h2>\n                    <p>{this.props.email}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Card;\n\n\nconst cardsArr = Array.prototype.slice.call(document.querySelectorAll('.card img'));\n    cardsArr.forEach(e => {\n        const degree = 360 * Math.random();\n        e.style.filter = 'hue-rotate(' + degree + 'deg)';\n    });","import React from 'react';\nimport Card from './Card';\nimport './CardsContainer.css';\n\nconst CardsContainer = ({contacts}) => {\n    const contactComponent = contacts.map((contact, i) => {\n        const degree = 250 + 160 * Math.random();\n        return <Card img={contacts[i].img} name={contacts[i].name} email={contacts[i].email} key={i} degree={`hue-rotate(${degree}deg)`}/>\n    });\n    return (\n        <div className='cardsContainer'>\n            {contactComponent}\n        </div>\n    );\n}\n\nexport default CardsContainer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport Header from '../components/Header';\nimport Add from '../components/Add';\nimport Search from '../components/Search';\nimport AddPopup from '../components/AddPopup';\nimport Scroll from '../components/Scroll';\nimport CardsContainer from '../components/CardsContainer';\n\nimport { setSearchResult, requestContacts, saveNewContact } from '../actions';\n\n/**\n * 1. App update nog wanneer je een contact toevoegd\n *      2. Unieke ID instellen die niet gelijk is aan de voornaam (kan hetzelfde zijn)\n *      3. Node.js server opzetten\n *      4. Toegevoegde contacten toevoegen aan aan de Node server\n * 5. Contact verwijderen\n * 6. Responsive maken\n * 7. Enter key is ook Save contact\n * 8. Je kan een afbeelding als file toevoegen wanneer je een nieuw contact aanmaakt\n * 9. Project online zetten\n */\n\nconst mapStateToProps = state => {\n    return {\n        searchResult: state.searchContacts.searchResult,\n        contacts: state.requestContacts.contacts,\n        inPending: state.requestContacts.inPending,\n        error: state.requestContacts.error\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        doSearch: (event) => {\n            dispatch(setSearchResult(event))\n        },\n        onRequestContacts: () => dispatch(requestContacts()),\n        onSaveNewContact: (newContact) => dispatch(saveNewContact(newContact))\n    }\n}\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showAddPopup: false\n        };\n    }\n    \n    componentDidMount(){\n        console.log('app did mount');\n        this.props.onRequestContacts();\n    }\n\n    addPopup = () => {\n        this.setState({ showAddPopup: true });\n    }\n\n    closePopup = () => {\n        this.setState({ showAddPopup: false });\n    }\n\n    render() {\n        const { showAddPopup } = this.state;\n        const { user, doSearch, contacts, isPending, searchResult } = this.props;\n        const filterContacts = contacts.filter(contact => {\n            return contact.name.toLowerCase().includes(searchResult.toLowerCase());\n        });\n        return !isPending ? (\n            <div className='app'>\n                <Header user={user} />\n                <div className='menuBar'>\n                    <Add addPopup={this.addPopup} />\n                    <Search doSearch={doSearch} />\n                </div>\n                <AddPopup saveContact={this.props.onSaveNewContact} closePopup={this.closePopup} show={showAddPopup}/>\n                <Scroll>\n                    <CardsContainer contacts={filterContacts} />\n                </Scroll>\n                <p className='author'>By Dinah Siebers</p>\n            </div>\n        ) : (\n            <div>\n                <p>Doet t niet</p>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import {\n    CHANGE_SEARCH_RESULT,\n    REQUEST_CONTACTS_PENDING,\n    REQUEST_CONTACTS_SUCCESS,\n    REQUEST_CONTACTS_FAILED,\n    ADD_CONTACT\n} from './constants.jsx';\n\nexport const setSearchResult = (text) => ({\n    type: CHANGE_SEARCH_RESULT,\n    payload: text\n});\n\nexport const requestContacts = () => (dispatch) => {\n    console.log('called the request contacts action');\n    dispatch({ type: REQUEST_CONTACTS_PENDING });\n    fetch('http://localhost:3001/contacts')\n    .then(r => r.json())\n    .then(data => dispatch({ type: REQUEST_CONTACTS_SUCCESS, payload: data }))\n    .catch(error => dispatch( {type: REQUEST_CONTACTS_FAILED, payload: error }));\n};\n\nexport const saveNewContact = (newContact) => (dispatch) => {\n    fetch('http://localhost:3001/contacts', { method: 'POST', body: JSON.stringify(newContact), headers: { \"Content-Type\": \"application/json; charset=utf-8\"}})\n    .then(r => r.json())\n    .then(data => dispatch({ type: ADD_CONTACT, payload: data }))\n    .catch(error => dispatch( {type: REQUEST_CONTACTS_FAILED, payload: error }));\n};","export const CHANGE_SEARCH_RESULT = 'CHANGE_SEARCH_RESULT';\n\nexport const REQUEST_CONTACTS_PENDING = 'REQUEST_CONTACTS_PENDING';\nexport const REQUEST_CONTACTS_SUCCESS = 'REQUEST_CONTACTS_SUCCESS';\nexport const REQUEST_CONTACTS_FAILED = 'REQUEST_CONTACTS_FAILED';\n\nexport const ADD_CONTACT = 'ADD_CONTACT';","import {\n    CHANGE_SEARCH_RESULT,\n    REQUEST_CONTACTS_PENDING,\n    REQUEST_CONTACTS_SUCCESS,\n    REQUEST_CONTACTS_FAILED,\n    ADD_CONTACT\n} from './constants.jsx';\n\nconst initialStateSearch = {\n    searchResult: ''\n}\n\nexport const searchContacts = (state=initialStateSearch, action={}) => {\n    console.log(action);\n    switch(action.type) {\n        case CHANGE_SEARCH_RESULT:\n            return Object.assign({}, state, { searchResult: action.payload });\n        default:\n            return state;\n    }\n}\n\nconst initialStateContacts = {\n    inPending: false,\n    contacts: [],\n    error: ''\n}\n\nexport const requestContacts = (state=initialStateContacts, action={}) => {\n    switch(action.type) {\n        case REQUEST_CONTACTS_PENDING:\n            return Object.assign({}, state, { isPending: true })\n        case REQUEST_CONTACTS_SUCCESS:\n            return Object.assign({}, state, { contacts: action.payload, isPending: false })\n        case REQUEST_CONTACTS_FAILED:\n            return Object.assign({}, state, { error: action.payload, isPending: false })\n        case ADD_CONTACT:\n            const newContacts = state.contacts.concat(action.payload);\n            return Object.assign({}, state, { contacts: newContacts });\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './containers/App';\nimport { searchContacts, requestContacts } from './reducers';\n\nconst rootReducer = combineReducers({ searchContacts, requestContacts });\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App user={'Dinah'} />\n    </Provider>, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();"],"sourceRoot":""}